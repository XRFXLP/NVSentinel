# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

run:
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m

  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 1

  # Include test files or not.
  # Default: true
  tests: false

  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path,
  # including the path prefix if one is set.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-dirs: []

  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  # skip-dirs-use-default: true # deprecated, moved to issues.exclude-dirs-use-default

  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  modules-download-mode: readonly

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false

  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.18
  go: '1.23'


# output configuration options
output:
  # Format: colored-line-number|line-number|json|colored-tab|tab|checkstyle|code-climate|junit-xml|github-actions|teamcity
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.xml,json:stdout,colored-line-number"
  #
  # Default: colored-line-number
  # format: "code-climate:code-quality-report.json,colored-line-number:stdout" # deprecated, moved to formats
  formats:
    - format: "code-climate"
      path: "code-quality-report.json"
    - format: "colored-line-number"
      path: "stdout"

  # Print lines of code with issue.
  # Default: true
  print-issued-lines: false

  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: false

  # Make issues output unique by line.
  # Default: true
  # uniq-by-line: false # deprecated, moved to issues.uniq-by-line

  # Add a prefix to the output file references.
  # Default is no prefix.
  path-prefix: ""

  # Sort results by: filepath, line and column.
  sort-results: true

# Issues configuration
issues:
  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  exclude-dirs-use-default: true

  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false

linters:
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    - asciicheck
    - bidichk
    - bodyclose
    - cyclop
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errname
    - errorlint
    - exhaustive
    - gocognit
    - goconst
    - gocritic
    - gofmt
    - goimports
    - lll
    - misspell
    - nestif
    - nilerr
    - noctx
    - whitespace
    - wsl
    - gosec